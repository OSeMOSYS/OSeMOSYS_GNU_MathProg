#
#	To run the model, copy and paste the following line into the command prompt, after replacing ...FILEPATH... with your folder structure.
#
#   C:\...FILEPATH...\glpsol -m C:\...FILEPATH...\OSeMOSYS_2016_08_01.txt -d C:\...FILEPATH...\UTOPIA_2016_08_01.txt -o C:\...FILEPATH...\UTOPIA-Results.txt
#
#  Alternatively, install GUSEK (http://gusek.sourceforge.net/gusek.html) and run the model within this integrated development environment (IDE).
#  To do so, open the .dat file within GUSEK and select "Use External .dat file" from the Options menu. Then go to the .mod file and select the "Go" icon or press F5.
#
#	Based on UTOPIA version 5: BASE - Utopia Base Model
#	The following are DEFAULT units, but they can be changed by users to their comfort. When doing so, users are advised to check the consistency of their choices though.
#	Energy and demands in PJ/a
#	Power plants in GW
#	Investment and Fixed O&M Costs: Power plant: Million $ / GW (//$/kW)
#	Other plant costs: Million $/PJ/a
#	Variable O&M (& Import) Costs: Million $ / PJ (//$/GJ)
#
#****************************************
param	AnnualExogenousEmission			default	0		:=	;
param	AnnualEmissionLimit				default	-1	:=	;
param	ModelPeriodExogenousEmission	default	0		:=	;
param	ModelPeriodEmissionLimit		default	-1	:=	;
#****************************************
param ResultsPath := "results";
#****************************************
set	EMISSION			:=	CO2	NOX	;
set	TECHNOLOGY			:=	E01	E21	E31	E51	E70	IMPDSL1	IMPGSL1	IMPHCO1	IMPOIL1	IMPURN1	RHE	RHO	RL1	SRE	TXD	TXE	TXG	RIV	RHu RLu TXu	;
# Summary of Set: TECHNOLOGY
# E01 = Coal fuelled power plant
# E21 = Nuclear power plant
# E31 = Hydro power plant
# E51 = Consumes and generates electricity
# E70 = Diesel fuelled power plant
# IMPDSL1 = Diesel supply
# IMPGSL1 = Gasoline supply
# IMPHCO1 = Coal supply
# IMPOIL1 = Crude oil supply
# IMPURN1 = Uranium supply
# RHE = Residential electricity heating consuming electricity
# RL1 = Residential lighting consuming electricity
# SRE = Refinery
# TXD = Transport in passenger km consuming diesel
# TXE = Transport in passenger km consuming electricity
# TXG = Transport in passenger km consuming gasoline
# RIV = River to supply hydro power plants
# RHu = Unmet heating demand
# RLu = Unmet lighting demand
# TXu = Unmet transport demand
#
set	FUEL				:=	DSL	ELC	GSL	HCO	HYD	OIL	URN	RH	RL	TX	;
# Summary of Set: FUEL
# DSL = Diesel
# ELC = Electricity
# GSL = Gasoline
# HCO = Coal
# HYD = Hydro
# OIL = Oil
# URN = Uranium
# RH = Heating demand
# RL = Lighting demand
# TX = Transport demand
#
set	YEAR				:=	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	;
set	TIMESLICE			:=	ID	IN	SD	SN	WD	WN	;
set	MODE_OF_OPERATION	:=	1 2	;
set	REGION				:=	UTOPIA	;
#
#  SEASON (Use consecutive numbers only, i.e, 1,2,3,4!, e.g., 1 = winter, 2 = spring, 3 = summer, 4 = autumn. The seasons with the higher number follow those with lower numbers.)
#  Note: in the UTOPIA case, energy is not stored from one season to another. Rather, the available capacity is assumed to be infinite. Therefore, it can be assumed that the intermediate season is between winter and summer without any consequences for the model results (and not both, between winter and summer, and between summer and winter).
set SEASON	:=	1	2	3	;
#
#  DAYTYPE (Use consecutive numbers only, i.e, 1,2,3,4!, e.g., 1 = weekdays, 2 = weekends. The weekdays with the higher numbers follow those with lower numbers.)
set DAYTYPE	:=	1	;
#
#  DAILYTIMEBRACKET (Use consecutive numbers only, i.e, 1,2,3,4!, e.g., 1 = first hour of day, 2 = 2nd hour of day, etc. The time brackets with the higher numbers follow those with lower numbers)
set DAILYTIMEBRACKET	:=	1	2	;
#
set	STORAGE	:=	DAM	;
#
param DiscountRate default 0.05 :=;
param DiscountRateStorage default 0.05 :=;
#
# DepreciationMethod; equal to 1 for Sinking Fund and 2 for Straight Line Depreciation
param DepreciationMethod default 1 :=;

#
# YearSplit{l in TIMESLICE, y in YEAR}  Units: Fraction of 8760 hours
# The fraction of the year in each time slice.
param	YearSplit	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
ID						0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667
IN						0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833
SD						0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667
SN						0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833	0.0833
WD						0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333	0.3333
WN						0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	0.1667	;

#
# AccumulatedAnnualDemand{r in REGION, f in FUEL, y in YEAR}  Units: PJ
# This type of demand can be satisfied at any time of the year, as long as the total is met.
param	AccumulatedAnnualDemand	default	0	:=
	[UTOPIA,*,*]:		1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
TX						5.2		5.46	5.72	5.98	6.24	6.5		6.76	7.02	7.28	7.54	7.8		8.189	8.578	8.967	9.356	9.745	10.134	10.523	10.912	11.301	11.69	;

#
# SpecifiedAnnualDemand{r in REGION, f in FUEL, y in YEAR}  Units: PJ
# The annual requirement for each output fuel.
param	SpecifiedAnnualDemand	default	0	:=
	[UTOPIA,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
RH						25.2	26.46	27.72	28.98	30.24	31.5	32.76	34.02	35.28	36.54	37.8	39.69	41.58	43.47	45.36	47.25	49.14	51.03	52.92	54.81	56.7
RL						5.6		5.88	6.16	6.44	6.72	7		7.28	7.56	7.84	8.12	8.4		8.82	9.24	9.66	10.08	10.5	10.92	11.34	11.76	12.18	12.6	;

#
# SpecifiedDemandProfile{r in REGION, l in TIMESLICE, f in FUEL, y in YEAR} Units: Fraction
# Indicates the proportion of energy demand required in each time slice. For each year the sum must be equal to 1.
param	SpecifiedDemandProfile	default	0	:=
	[UTOPIA,RH,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
ID						0.12	0.12	0.12	0.12	0.12	0.12	0.12	0.12	0.12	0.12	0.12	0.12	0.12	0.12	0.12	0.12	0.12	0.12	0.12	0.12	0.12
IN						0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06
SD						0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0
SN						0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0
WD						0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467	0.5467
WN						0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733	0.2733

	[UTOPIA,RL,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
ID						0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15
IN						0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05
SD						0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15	0.15
SN						0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05
WD						0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5
WN						0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		;

#
# YearlyPeakCapacity{r in REGION, y in YEAR} Units: PJ
# Indicates the electricity demand in the hour of the highest demand in the year
param	YearlyPeakCapacity	default	0	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
UTOPIA									0.005677568	0.005961446	0.006245325	0.006529203	0.006813081	0.00709696	0.007380838	0.007664716	0.007948595	0.008232473	0.008516352	0.008942169	0.009367987	0.009793804	0.010219622	0.01064544	0.011071257	0.011497075	0.011922892	0.01234871	0.012774527 	;						

#
# CapacityToActivityUnit{r in REGION, t in TECHNOLOGY};  Units: PJ/GW-YR
# Thus here we use a factor of 31.536, which is the level of energy production in PJ produced from 1 GW operating for 1 year (1GW * 8760 * 3600 / 10^6)
param	CapacityToActivityUnit	default	1	:	E01		E21		E31		E51		E70		:=
UTOPIA											31.536	31.536	31.536	31.536	31.536	;

# InputActivityRatio{r in REGION, t in TECHNOLOGY, f in FUEL, m in MODE_OF_OPERATION, y in YEAR}  Units: Ratio
# The input (use) of fuel per unit of activity for each technology.
param	InputActivityRatio	default	0	:=
	[UTOPIA,*,DSL,1,*]	:	1990			1991			1992			1993			1994			1995			1996			1997			1998			1999			2000			2001			2002			2003			2004			2005			2006			2007			2008			2009			2010	:=
E70							3.4				3.4				3.4				3.4				3.4				3.4				3.4				3.4				3.4				3.4				3.4				3.4				3.4				3.4				3.4				3.4				3.4				3.4				3.4				3.4				3.4
RHO							1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429		1.428571429
TXD							1				1				1				1				1				1				1				1				1				1				1				1				1				1				1				1				1				1				1				1				1

	[UTOPIA,*,ELC,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
RHE							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
RL1							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
TXE							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1

	[UTOPIA,*,GSL,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
TXG							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1

	[UTOPIA,*,HCO,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
E01							3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125

	[UTOPIA,*,HYD,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
E31							3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125	3.125

	[UTOPIA,*,OIL,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
SRE							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1

	[UTOPIA,*,URN,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
E21							1		1		1		1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1

	[UTOPIA,*,ELC,2,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
E51							1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	1.3889	;

#
# OutputActivityRatio{r in Region, t in Technology, f in Fuel, m in ModeOfOperation, y in Year}  Units: Ratio
# Ratio of output to activity.
# Should be 1 for power plants/electricity, 1 for supply technologies and their respective fuels and zero for rest.
param	OutputActivityRatio	default	0	:=
	[UTOPIA,*,RH,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
RHE							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
RHO							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
RHu							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1

	[UTOPIA,*,RL,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
RL1							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
RLu							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1

	[UTOPIA,*,TX,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
TXD							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
TXE							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
TXG							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
TXu							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1

	[UTOPIA,*,DSL,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
SRE							0.7		0.7		0.7		0.7		0.7		0.7		0.7		0.7		0.7		0.7		0.7		0.7		0.7		0.7		0.7		0.7		0.7		0.7		0.7		0.7		0.7
IMPDSL1						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1

	[UTOPIA,*,ELC,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
E01							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
E21							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
E31							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
E51							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
E70							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1

	[UTOPIA,*,GSL,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
SRE							0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3
IMPGSL1						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1

	[UTOPIA,*,HCO,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
IMPHCO1						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1

	[UTOPIA,*,HYD,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
RIV							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1

	[UTOPIA,*,OIL,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
IMPOIL1						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1

	[UTOPIA,*,URN,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
IMPURN1						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		;

#
# FixedCost{r in Region, t in Technology, y in Year} Units: M€/GW of Capacity
# The annual cost per unit of capacity of a technology.
param	FixedCost	default	0	:=
	[UTOPIA,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
E01						40		40		40		40		40		40		40		40		40		40		40		40		40		40		40		40		40		40		40		40		40
E21						500		500		500		500		500		500		500		500		500		500		500		500		500		500		500		500		500		500		500		500		500
E31						75		75		75		75		75		75		75		75		75		75		75		75		75		75		75		75		75		75		75		75		75
E51						30		30		30		30		30		30		30		30		30		30		30		30		30		30		30		30		30		30		30		30		30
E70						30		30		30		30		30		30		30		30		30		30		30		30		30		30		30		30		30		30		30		30		30
RHO						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
RL1						9.46	9.46	9.46	9.46	9.46	9.46	9.46	9.46	9.46	9.46	9.46	9.46	9.46	9.46	9.46	9.46	9.46	9.46	9.46	9.46	9.46
TXD						52		52		52		52		52		52		52		52		52		52		52		52		52		52		52		52		52		52		52		52		52
TXE						100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100
TXG						48		48		48		48		48		48		48		48		48		48		48		48		48		48		48		48		48		48		48		48		48		;

#
# CapitalCost{r in Region, t in Technology, y in Year} Units: M€/GW Capacity
# Total capital cost (including interest paid during construction)per unit of capacity for new capacity additions
param	CapitalCost	default	0	:=
	[UTOPIA,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
E01						1400	1390	1380	1370	1360	1350	1340	1330	1320	1310	1300	1290	1280	1270	1260	1250	1240	1230	1220	1210	1200
E21						5000	5000	5000	5000	5000	5000	5000	5000	5000	5000	5000	5000	5000	5000	5000	5000	5000	5000	5000	5000	5000
E31						3000	3000	3000	3000	3000	3000	3000	3000	3000	3000	3000	3000	3000	3000	3000	3000	3000	3000	3000	3000	3000
E51						900		900		900		900		900		900		900		900		900		900		900		900		900		900		900		900		900		900		900		900		900
E70						1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000
IMPDSL1					0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0
IMPGSL1					0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0
IMPHCO1					0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0
IMPOIL1					0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0
IMPURN1					0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0
RHE						90		90		90		90		90		90		90		90		90		90		90		90		90		90		90		90		90		90		90		90		90
RHO						100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100
RL1						0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0
SRE						100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100		100
TXD						1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044
TXE						2000	1975	1950	1925	1900	1875	1850	1825	1800	1775	1750	1725	1700	1675	1650	1625	1600	1575	1550	1525	1500
TXG						1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044	1044
RIV						0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0
RHu						0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0
RLu						0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0
TXu						0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0	;

#
# VariableCost{r in Region, t in Technology, m in ModeOfOperation, y in Year} Units: Million €/PJ = €/GJ
# Cost per unit of activity of the technology
# This variable records both the nonfuel O&M costs of processes and fuel costs of each fuel supplied to those processes.
param	VariableCost	default	0.00001	:=
	[UTOPIA,*,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
E01						0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3		0.3
E21						1.5		1.5		1.5		1.5		1.5		1.5		1.5		1.5		1.5		1.5		1.5		1.5		1.5		1.5		1.5		1.5		1.5		1.5		1.5		1.5		1.5
E70						0.4		0.4		0.4		0.4		0.4		0.4		0.4		0.4		0.4		0.4		0.4		0.4		0.4		0.4		0.4		0.4		0.4		0.4		0.4		0.4		0.4
SRE						10		10		10		10		10		10		10		10		10		10		10		10		10		10		10		10		10		10		10		10		10
IMPDSL1					10		10		10		10		10		10		10		10		10		10		10		10		10		10		10		10		10		10		10		10		10
IMPGSL1					15		15		15		15		15		15		15		15		15		15		15		15		15		15		15		15		15		15		15		15		15
IMPHCO1					2		2		2		2		2		2		2		2		2		2		2		2		2		2		2		2		2		2		2		2		2
IMPOIL1					8		8		8		8		8		8		8		8		8		8		8		8		8		8		8		8		8		8		8		8		8
IMPURN1					2		2		2		2		2		2		2		2		2		2		2		2		2		2		2		2		2		2		2		2		2
RHu 					99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999
RLu 					99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999
TXu						99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	99999	;

#
# ResidualCapacity{r in Region, t in Technology, y in Year} Units: GW
# The capacity left over from periods prior to the modeling period.
param	ResidualCapacity 	default	0	:=
	[UTOPIA,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
E01						0.5		0.5		0.5		0.4		0.4		0.4		0.4		0.4		0.4		0.3		0.32	0.3		0.3		0.3		0.3		0.2		0.2		0.2		0.2		0.2		0.15
E21						0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0
E31						0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1
E51						0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5		0.5
E70						0.3		0.3		0.29	0.29	0.28	0.28	0.27	0.27	0.26	0.26	0.25	0.26	0.26	0.27	0.27	0.28	0.28	0.29	0.29	0.3		0.2
RHE						0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0
RHO						25		23.8	22.5	21.3	20		18.8	17.5	16.3	15		13.8	12.5	11.3	10		8.8		7.5		6.3		5		3.8		2.5		1.3		0
RL1						5.6		5		4.5		3.9		3.4		2.8		2.2		1.7		1.1		0.6		0		0		0		0		0		0		0		0		0		0		0
TXD						0.6		0.6		0.5		0.5		0.4		0.4		0.4		0.3		0.3		0.2		0.2		0.2		0.2		0.1		0.1		0.1		0.1		0.1		0		0		0		;


#
# AvailabilityFactor{r in Region, t in Technology, y in Year} Units: Fraction of Hours in Year
# Maximum time technology may run for the whole year. Often used to simulate planned outages. OSeMOSYS will choose when to run or not run.
param	AvailabilityFactor	default	1	:=
	[UTOPIA,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
RHE						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
RHO						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
RL1						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
TXD						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
TXE						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
TXG						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1	;

#
# CapacityFactor{r in Region, t in Technology, l in TIMESLICE, y in Year} Units: Fraction of Hours in Year
# Indicates the maximum time technology may run in a given time slice.
param	CapacityFactor	default	1	:=
	[UTOPIA,E01,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
ID							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
IN							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
SD							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
SN							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
WD							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
WN							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8

	[UTOPIA,E21,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
ID							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
IN							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
SD							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
SN							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
WD							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
WN							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8

	[UTOPIA,E31,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
ID							0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27
IN							0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27
SD							0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27
SN							0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27
WD							0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27
WN							0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27	0.27

	[UTOPIA,E51,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
ID							0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17
IN							0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17
SD							0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17
SN							0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17
WD							0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17
WN							0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17	0.17

	[UTOPIA,E70,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
ID							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
IN							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
SD							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
SN							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
WD							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8
WN							0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		0.8		;

#
# EmissionActivityRatio{r in Region, t in Technology, e in Emission, m in ModeOfOperation, y in Year}  Units: Tonnes/PJ Output
# Emissions factor per unit of activity.
param	EmissionActivityRatio	default	0	:=
	[UTOPIA,*,CO2,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
IMPDSL1						0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075
IMPGSL1						0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075
IMPHCO1						0.089	0.089	0.089	0.089	0.089	0.089	0.089	0.089	0.089	0.089	0.089	0.089	0.089	0.089	0.089	0.089	0.089	0.089	0.089	0.089	0.089
IMPOIL1						0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075	0.075

	[UTOPIA,*,NOX,1,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
TXD							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
TXG							1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1	;

#
# EmissionsPenalty{r in Region, e in Emission, y in Year} Units: Million $/Tonne of Pollutant
# Externality cost per unit of emission
param	EmissionsPenalty			:=
	[UTOPIA,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
CO2						0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0
NOX						0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		0		;

#
# ReserveMargin{r in Region, y in Year} Units: Ratio (Installed/Peak)
# The reserve (installed) capacity required relative to the peak demand for the specified fuel.
param	ReserveMargin	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
UTOPIA						1.18	1.18	1.18	1.18	1.18	1.18	1.18	1.18	1.18	1.18	1.18	1.18	1.18	1.18	1.18	1.18	1.18	1.18	1.18	1.18	1.18	;

#
# ReserveMarginTagTechnology{r in Region,t in Technology, y in Year} Units: fraction
# Amount the technology contributes to the reserve margin 1=100%  0.2=20%.
param	ReserveMarginTagTechnology	default	0	:=
	[UTOPIA,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
E01						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
E21						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
E31						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
E51						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1
E70						1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1		1	;

#
# param OperationalLife{r in Region, t in Technology};  Units: years
# Operational lifespan of a process in years.
param	OperationalLife	default	1	:	E01	E21	E31	E51	E70	RHE	RHO	RL1	SRE	TXD	TXE	TXG	:=
UTOPIA									40	40	100	100	40	30	30	10	50	15	15	15	;

#
# TotalAnnualMaxCapacity{r in Region, t in Technology, y in Year} Units: GW
# Maximum total (residual and new) capacity each year.
param	TotalAnnualMaxCapacity	default	-1	:=
	[UTOPIA,*,*]	:	1990		1991		1992		1993		1994		1995		1996		1997		1998		1999		2000		2001		2002		2003		2004		2005		2006		2007		2008		2009		2010		:=
E31						0.1301		0.1401		0.1401		0.1501		0.1501		0.1501		0.1601		0.1601		0.1601		0.1601		0.1701		0.201		0.201		0.201		0.201		0.201		0.201		0.201		0.201		0.201		0.2101
E51						3			3			3			3			3			3			3			3			3			3			3			3			3			3			3			3			3			3			3			3			3
RHE						0			0			0			0			0			0			0			0			0			0			999999999	999999999	999999999	999999999	999999999	999999999	999999999	999999999	999999999	999999999	999999999
SRE						0.1001		0.1001		0.1001		0.1001		0.1001		0.1001		0.1001		0.1001		0.1001		0.1001		999999999	999999999	999999999	999999999	999999999	999999999	999999999	999999999	999999999	999999999	999999999
TXE						0			0.4			0.8			1.2			1.6			2			2.4			2.8			3.2			3.6			4			4.6			5.2			5.8			6.4			7			7.6			8.2			8.8			9.4			10			;

#
# TotalAnnualMinCapacity{r in Region, t in Technology, y in Year} Units: GW
# Minimum total (residual and new) capacity each year.
param	TotalAnnualMinCapacity	default	0	:=
	[UTOPIA,*,*]	:	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	:=
E31						0.13	0.14	0.14	0.15	0.15	0.15	0.16	0.16	0.16	0.16	0.17	0.2		0.2		0.2		0.2		0.2		0.2		0.2		0.2		0.2		0.21
SRE						0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0.1		0		0		0		0		0		0		0		0		0		0		0		;

#
# TotalAnnualMaxCapacityInvestment{r in Region, t in Technology, y in Year} Units: GW
# Maximum new capacity each year.  Use this to stop OSeMOSYS investing in existing technologies.
param	TotalAnnualMaxCapacityInvestment	default	-1	:=	;
#
# TotalAnnualMinCapacityInvestment{r in Region, t in Technology, y in Year} Units: GW
# Minimum new capacity each year.
param	TotalAnnualMinCapacityInvestment	default	0	:=	;
#
# param TotalTechnologyAnnualActivityUpperLimit{r in Region, t in Technology, y in Year} Units: PJ
# Maximum amount of activity that a technology can perform each year.
param	TotalTechnologyAnnualActivityUpperLimit	default	-1	:=	;
#
# TotalTechnologyAnnualActivityLowerLimit{r in Region, t in Technology, y in Year} Units: PJ
# Minimum activity that a technology can perform each year.
param	TotalTechnologyAnnualActivityLowerLimit	default	0	:=	;
#
# TotalTechnologyModelPeriodActivityUpperLimit{r in Region, t in Technology} Units: PJ
# Maximum level of activity by a technology over the whole model period.
param	TotalTechnologyModelPeriodActivityUpperLimit	default	-1	:=
# THIS IS NOT ENFORCED IN ORIGINAL CODE!!!  UTOPIA E51 0   # set E51 to zero to force model not to use it.
;
#
# TotalTechnologyModelPeriodActivityLowerLimit{r in Region, t in Technology} Units: PJ
# Minimum level of activity by a technology over the whole model period.
param	TotalTechnologyModelPeriodActivityLowerLimit	default	0	:=	;
#
# RETagTechnology{r in Region, t in Technology, y in Year} Units: 1=yes, 0=no
# Flags technologies that are allowed to contribute to the renewable capacity of the system.
param	RETagTechnology	default	0	:=	;
#
# RETagFuel{r in Region,f in Fuel, y in Year} Units: 1=yes, 0=no
# The fuels for which there is a renewable target.
param	RETagFuel	default	0	:=	;
#
# REMinProductionTarget{r in Region, y in Year}  Units: Fraction
# What fraction of the fuels (tagged in the RETagFuel parameter) must come from the Renewable technologies (tagged in the RETagTechnology parameter)
param	REMinProductionTarget	default	0	:=	;
#
# Conversionls{l in TIMESLICE, ls in SEASON}
# Set equal to 1 to assign a particular time slice to a season. Set equal to 0 in order not to assign a particular time slice to a season.
param Conversionls default 0 :=
[*,*]:	1	2	3	:=
ID		0	1	0
IN		0	1	0
SD		0	0	1
SN		0	0	1
WD		1	0	0
WN		1	0	0	;
# Conversionld{l in TIMESLICE, ld in DAYTYPE}
# Set equal to 1 to assign a particular time slice to a day type. Set equal to 0 in order not to assign a particular time slice to a day type.
param	Conversionld	default	0	:=
[*,*]:	1	:=
ID		1
IN		1
SD		1
SN		1
WD		1
WN		1	;
# Conversionlh{l in TIMESLICE, lh in DAILYTIMEBRACKET}
# Set equal to 1 to assign a particular time slice to a daily time bracket. Set equal to 0 in order not to assign a particular time slice to a daily time bracket.
param	Conversionlh	default	0	:=
[*,*]:	1	2	:=
ID		1	0
IN		0	1
SD		1	0
SN		0	1
WD		1	0
WN		0	1	;
#
# DaySplit{lh in DAILYTIMEBRACKET, y in YEAR};
# The length of one time bracket in one specific day as a fraction of the year, e.g., when distinguishing between days and night: 12h/(24h*365d)
param DaySplit default 0.00137 :=;
#
# TechnologyToStorage{r in REGION, t in TECHNOLOGY, s in STORAGE, m in MODE_OF_OPERATION}
param	TechnologyToStorage	default	0	:=
	[UTOPIA,*,*,2]		:	DAM	:=
E51			1	;
#
# TechnologyFromStorage{r in REGION, t in TECHNOLOGY, s in STORAGE, m in MODE_OF_OPERATION}
param	TechnologyFromStorage	default	0	:=
	[UTOPIA,*,*,1]		:	DAM	:=
E51			1	;
#
# StorageLevelStart{r in REGION, s in STORAGE}
# At beginning of first year. Attention: if zero, OSeMOSYS will use the first time slices in the entire first day type in the entire first season to fill the storage.
# To avoid OSeMOSYS taking a whole part of a season to fill up the storage, and to avoid defining smaller seasons, set it to zero, run the model, and check the StorageLevelYearStart
# variable of the following year and use a similar value for StorageLevelStart. Alternatively, model a few years before the first year of your interest.
param StorageLevelStart default 999:=
;
# DaysInDayType{ls in SEASON, ld in DAYTYPE, y in YEAR};
# Number of days for each day type within a week, i.e., out of 7
param DaysInDayType default 7:=
;
# StorageMaxChargeRate{r in REGION, s in STORAGE}; Unit: GW
param StorageMaxChargeRate default 99:=
;
# StorageMaxDischargeRate{r in REGION, s in STORAGE}; Unit: GW
param StorageMaxDischargeRate default 99:=
;
# MinStorageCharge{r in REGION, s in STORAGE, y in YEAR}; Unit: fraction of MaxStorageCharge, i.e., between 0.00 and 0.99
param MinStorageCharge default 0. :=
;
# OperationalLifeStorage{r in REGION, s in STORAGE, y in YEAR}; Unit: years
param OperationalLifeStorage default			99	:=
;
# CapitalCostStorage{r in REGION, s in STORAGE, y in YEAR}; Unit: USD/GWa
param CapitalCostStorage default 			0	:=
;
# ResidualStorageCapacity{r in REGION, s in STORAGE, y in YEAR};
# Storage capacity which is available from before the modelling period, or which is know to become available in a specific year. Unit: GWa
param ResidualStorageCapacity default			999	:=
;
# CapacityOfOneTechnologyUnit{r in REGION, t in TECHNOLOGY, y in YEAR}; Unit: GW
# Defines the minimum size of one capacity addition. If set to zero, no mixed integer linear programming (MILP) is used and computational time will decrease.
param CapacityOfOneTechnologyUnit default	0	:=	;
#
# TradeRoute{r in REGION, rr in REGION, f in FUEL, y in YEAR}
# Defines which region r is linked with which region rr in order to enable or disable trading of a specific fuel. Unit: Fraction, either 1 or 0
# 1 defines a trade link and 0 ensuring that no trade occurs. Values inbetween are not allowed. If r is linked to rr, rr has also to be linked with r.
# I.e., for one specific year and fuel, this parameter is entered as a symmetric matrix (with a diagonal of zeros).
param TradeRoute default	0 :=
;
end;
